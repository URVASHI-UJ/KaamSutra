{"version":3,"sources":["layout/ResponsiveDrawer.js","components/FormDialog.js","components/LoadingDialog.js","components/WorkItem.js","components/CategoryCard.js","pages/Works.js","pages/Dashboard.js","App.js","serviceWorker.js","index.js","yarn-ball.svg"],"names":["useStyles","makeStyles","theme","root","display","drawer","Object","defineProperty","breakpoints","up","width","flexShrink","appBar","marginLeft","concat","menuButton","marginRight","spacing","toolbar","objectSpread","mixins","alignItems","brand","justifyContent","height","logo","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","container","title","desc","children","drawerMenu","classes","useTheme","react_default","a","createElement","className","Typography","variant","src","alt","Divider","CssBaseline","AppBar","position","color","Toolbar","IconButton","aria-label","edge","onClick","drawerToggler","Icon","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","drawerState","onClose","paper","ModalProps","keepMounted","xsDown","paragraph","FormDialog","handleClose","fields","text","primaryAction","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","map","item","DialogActions","Button","fullWidth","maxWidth","style","CircularProgress","WorkItem","ListItem","ListItemAvatar","ListItemText","primary","value","secondary","Fragment","description","marginTop","Date","date","toLocaleString","ListItemSecondaryAction","card","cardHeader","background","palette","dark","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","RecipeReviewCard","_React$useState","React","useState","_React$useState2","slicedToArray","expanded","setExpanded","_React$useState3","_React$useState4","works","setWorks","_useState","_useState2","workDialogOpen","setWorkDialogOpen","_useState3","_useState4","showLoader","setShowLoader","workRef","createRef","workDescRef","workDialogFields","TextField","autoFocus","margin","name","label","type","inputRef","workDialog","components_FormDialog","work","current","workDesc","fetch","category","_id","method","headers","Content-Type","body","JSON","stringify","then","data","json","jsonData","toConsumableArray","catch","err","console","log","useEffect","LoadingDialog","Card","CardHeader","action","titleTypographyProps","subheader","createdAt","CardActions","disableSpacing","disabled","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","size","List","i","Item","component","animationDelay","components_WorkItem","length","Works","categories","setCategories","categoryDialogOpen","setcategoryDialogOpen","_useState5","_useState6","categoryRef","categoryDialogFields","CategoryDialog","Fab","bottom","right","zIndex","marginBottom","Grid","xs","sm","md","CategoryCard","Dashboard","createMuiTheme","main","cyan","teal","App","navItems","icon","pageComponent","pages_Dashboard","pages_Works","selectedItemId","setSelectedItemId","mobileDrawerOpen","setMobileDrawerOpen","navItemListener","index","toggleMobileDrawer","state","DrawerMenu","button","key","selected","ListItemIcon","ThemeProvider","layout_ResponsiveDrawer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"mZAgBMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,QAAS,QAEbC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EAAMM,YAAYC,GAAG,MAAQ,CAC1BC,MARQ,IASRC,WAAY,IAGpBC,OAAON,OAAAC,EAAA,EAAAD,CAAA,CACHO,WAbY,KAcXX,EAAMM,YAAYC,GAAG,MAAQ,CAC1BC,MAAK,eAAAI,OAfG,IAeH,SAGbC,WAAWT,OAAAC,EAAA,EAAAD,CAAA,CACPU,YAAad,EAAMe,QAAQ,IAC1Bf,EAAMM,YAAYC,GAAG,MAAQ,CAC1BL,QAAS,SAGjBc,QAAQZ,OAAAa,EAAA,EAAAb,CAAA,GACDJ,EAAMkB,OAAOF,QADb,CAEHd,QAAS,OACTiB,WAAY,WAEhBC,MAAO,CACHlB,QAAS,OACTmB,eAAgB,aAChBF,WAAY,SACZG,OAAQ,QAEZC,KAAM,CACFD,OAAQ,SACRX,WAAY,OACZG,YAAa,QAEjBU,YAAa,CACThB,MAzCY,KA2ChBiB,QAAS,CACLC,SAAU,EACVC,QAAS3B,EAAMe,QAAQ,OAiFhBa,MA7Ef,SAA0BC,GAAO,IACrBC,EAAiDD,EAAjDC,UAAWC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,KAAMC,EAAyBJ,EAAzBI,SAAUC,EAAeL,EAAfK,WACpCC,EAAUrC,IACVE,EAAQoC,cAERjC,EACFkC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQnB,SACpBqB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWL,EAAQf,OACxCiB,EAAAC,EAAAC,cAAA,OAAKI,IAAKpB,IAAMqB,IAAI,GAAGJ,UAAWL,EAAQZ,OAD9C,cAKJc,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACCX,GAIT,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQlC,MACpBoC,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAM,UAAUT,UAAWL,EAAQzB,QACxD2B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIF,MAAM,UACNG,aAAW,cACXC,KAAK,QACLC,QAASzB,EAAM0B,cACff,UAAWL,EAAQtB,YAEnBwB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,cAEJnB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKe,QAAM,GAC1B1B,KAIbM,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQhC,OAAQiD,aAAW,mBAEvCf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OACxBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI/B,UAAWA,EACXY,QAAQ,YACRoB,OAA4B,QAApB9D,EAAM+D,UAAsB,QAAU,OAC9CC,KAAMnC,EAAMoC,YACZC,QAASrC,EAAM0B,cACfpB,QAAS,CACLgC,MAAOhC,EAAQX,aAEnB4C,WAAY,CACRC,aAAa,IAGhBlE,IAGTkC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQY,QAAM,EAACV,eAAe,OAC1BvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI1B,QAAS,CACLgC,MAAOhC,EAAQX,aAEnBkB,QAAQ,YACRsB,MAAI,GAEH7D,KAIbkC,EAAAC,EAAAC,cAAA,QAAMC,UAAWL,EAAQV,SACrBY,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQnB,UACxBqB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAY8B,WAAS,GAAEvC,GACtBC,2JCpGFuC,MA1Bf,SAAoB3C,GAAO,IACfmC,EAA0DnC,EAA1DmC,KAAMS,EAAoD5C,EAApD4C,YAAaC,EAAuC7C,EAAvC6C,OAAQ3C,EAA+BF,EAA/BE,MAAO4C,EAAwB9C,EAAxB8C,KAAMC,EAAkB/C,EAAlB+C,cAEhD,OACIvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACIb,KAAMA,EACNE,QAASO,EACTK,kBAAgB,qBAEhBzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAaC,GAAG,qBAAqBjD,GACrCM,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KAAoBP,GACnBD,EAAOS,IAAI,SAAAC,GAAI,OAAIA,KAExB/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACIhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQhC,QAASmB,EAAaxB,MAAM,WAApC,UAGAZ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQhC,QAASsB,EAAe3B,MAAM,WAAtC,aCQDuB,MA3Bf,SAAoB3C,GAAO,IACfmC,EAASnC,EAATmC,KAER,OACI3B,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACIb,KAAMA,EACNc,kBAAgB,oBAChBS,WAAS,EACTC,SAAS,MAETnD,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,WACA3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACIO,MAAO,CACHvF,QAAS,OACTmB,eAAgB,aAChBF,WAAY,WAGhBkB,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAkBD,MAAO,CAAE3E,YAAa,MAP5C,yCCgBD6E,GA1BE,SAAA9D,GACb,OACIQ,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUzE,WAAW,aAAaqB,UAAU,YACxCH,EAAAC,EAAAC,cAACsD,GAAA,EAAD,KACIxD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMP,MAAM,WAAZ,aAEJZ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACIC,QAASlE,EAAMmE,MACfC,UACI5D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,SAAP,KACI7D,EAAAC,EAAAC,cAAA,YAAOV,EAAMsE,aACb9D,EAAAC,EAAAC,cAAA,QAAMkD,MAAO,CAAEvF,QAAS,QAASkG,UAAW,IACvC,IAAIC,KAAKxE,EAAMyE,MAAMC,qBAKtClE,EAAAC,EAAAC,cAACiE,GAAA,EAAD,KACInE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYE,KAAK,MAAMD,aAAW,UAC9Bf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,mBCPd1D,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCyG,KAAM,GAGNC,WAAY,CACRC,WAAU,0BAAA/F,OAA4BZ,EAAM4G,QAAQb,QAAQc,KAAlD,MAAAjG,OACNZ,EAAM4G,QAAQX,UAAUY,KADlB,MAIdC,MAAO,CACHxF,OAAQ,EACRyF,WAAY,UAEhBC,OAAQ,CACJC,UAAW,eACXtG,WAAY,OACZuG,WAAYlH,EAAMmH,YAAYC,OAAO,YAAa,CAC9CC,SAAUrH,EAAMmH,YAAYE,SAASC,YAG7CC,WAAY,CACRN,UAAW,qBA0NJO,OAtNf,SAA0B3F,GACtB,IAAMM,EAAUrC,KADa2H,EAEGC,IAAMC,UAAS,GAFlBC,EAAAxH,OAAAyH,EAAA,EAAAzH,CAAAqH,EAAA,GAEtBK,EAFsBF,EAAA,GAEZG,EAFYH,EAAA,GAAAI,EAGHN,IAAMC,SAAS,MAHZM,EAAA7H,OAAAyH,EAAA,EAAAzH,CAAA4H,EAAA,GAGtBE,EAHsBD,EAAA,GAGfE,EAHeF,EAAA,GAAAG,EAIeT,oBAAS,GAJxBU,EAAAjI,OAAAyH,EAAA,EAAAzH,CAAAgI,EAAA,GAItBE,EAJsBD,EAAA,GAINE,EAJMF,EAAA,GAAAG,EAKOb,oBAAS,GALhBc,EAAArI,OAAAyH,EAAA,EAAAzH,CAAAoI,EAAA,GAKtBE,EALsBD,EAAA,GAKVE,EALUF,EAAA,GAOvBG,EAAUC,sBACVC,EAAcD,sBAEdE,EAAmB,CACrB1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACPlE,GAAG,OACHmE,KAAK,OACLC,MAAM,YACNC,KAAK,OACLC,SAAUV,EACVrD,WAAS,IAEblD,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACIE,OAAO,QACPlE,GAAG,YACHmE,KAAK,YACLC,MAAM,mBACNC,KAAK,OACLC,SAAUR,EACVvD,WAAS,KAIXgE,EACFlH,EAAAC,EAAAC,cAACiH,EAAD,CACIxF,KAAMsE,EACN5D,OAAQqE,EACRtE,YAAa,kBAAM8D,GAAkB,IACrCxG,MAAM,WACN4C,KAAK,uGACLC,cAAe,WACX+D,GAAc,GAEd,IAAMc,EAAOb,EAAQc,QAAQ1D,MACvB2D,EAAWb,EAAYY,QAAQ1D,MAEzB,MAARyD,GAAyB,KAATA,GACJ,MAAZE,GAAiC,KAAbA,GAExBC,MAAK,aAAAhJ,OAAciB,EAAMgI,SAASC,KAAO,CACrCC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBrI,MAAO0H,EACPtD,YAAawD,MAGhBU,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACFrC,EAAQ,CAAEqC,EAASf,MAAX7I,OAAAR,OAAAqK,EAAA,EAAArK,CAAoB8H,KAC5BK,GAAkB,GAClBI,GAAc,KAEjB+B,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAoB1C,OAfAG,oBAAU,WACNlB,MAAK,aAAAhJ,OAAciB,EAAMgI,SAASC,KAAO,CACrCC,OAAQ,QAEPM,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACFrC,EAASqC,EAAStC,SAErBwC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC/B,CAAC9I,EAAMgI,SAASC,MAOfzH,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,SAAP,KACI7D,EAAAC,EAAAC,cAACwI,EAAD,CAAe/G,KAAM0E,IACpBa,EACDlH,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAMxI,UAAWL,EAAQsE,MACrBpE,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CACIC,OACI7I,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYC,aAAW,YACnBf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,mBAGRzB,MAAOF,EAAMgI,SAAS9H,MACtBoJ,qBAAsB,CAAEzI,QAAS,MACjC0I,UAAW,IAAI/E,KACXxE,EAAMgI,SAASwB,WACjB9E,iBACF/D,UAAWL,EAAQuE,aAWvBrE,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAaC,gBAAc,GACvBlJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIrC,MAAM,YACNK,QAAS,kBAAMiF,GAAkB,IACjCiD,UAAWtD,GAEX7F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMiC,MAAO,CAAE3E,YAAa,IAA5B,OALJ,YAQAuB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIX,UAAWiJ,YAAKtJ,EAAQ6E,OAAT5G,OAAAC,EAAA,EAAAD,CAAA,GACV+B,EAAQoF,WAAaO,IAE1BxE,QA5CpB,WACIyE,GAAaD,IA4CG4D,gBAAe5D,EACf1E,aAAW,aAEXf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,sBAGRnB,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAUC,GAAI9D,EAAU+D,QAAQ,OAAOC,eAAa,GAChDzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KACI1J,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,SAASO,MAAM,iBAAnC,oBAGEiF,GACE7F,EAAAC,EAAAC,cAAA,OACIkD,MAAO,CACHvF,QAAS,OACTmB,eAAgB,aAChBF,WAAY,SACZiF,UAAW,KAGf/D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACID,MAAO,CAAE3E,YAAa,IACtBkL,KAAM,KAVd,kBAeH9D,GACG7F,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACK/D,EAAM/C,IAAI,SAACC,EAAM8G,GACd,IAAIC,EACA9J,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,SAAP,KACI7D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIH,QAAQ,QACR0J,UAAU,OAEd/J,EAAAC,EAAAC,cAAA,OACIC,UAAU,8BACViD,MAAO,CACH4G,eACI,GAAKH,EAAI,OAGjB7J,EAAAC,EAAAC,cAAC+J,GAAD,CACItG,MAAOZ,EAAKrD,MACZuE,KAAMlB,EAAKiG,UACXlF,YACIf,EAAKe,gBA0BzB,OAnBU,IAAN+F,IACAC,EACI9J,EAAAC,EAAAC,cAAA,OACIC,UAAU,8BACViD,MAAO,CACH4G,eACI,GAAKH,EAAI,OAGjB7J,EAAAC,EAAAC,cAAC+J,GAAD,CACItG,MAAOZ,EAAKrD,MACZuE,KAAMlB,EAAKiG,UACXlF,YACIf,EAAKe,gBAMlBgG,KAIlBjE,GAA0B,IAAjBA,EAAMqE,QACZlK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQO,MAAM,WAAlC,4BC3HbuJ,GAlHD,WAAM,IAAApE,EACoBT,mBAAS,MAD7BU,EAAAjI,OAAAyH,EAAA,EAAAzH,CAAAgI,EAAA,GACTqE,EADSpE,EAAA,GACGqE,EADHrE,EAAA,GAAAG,EAEoCb,oBAAS,GAF7Cc,EAAArI,OAAAyH,EAAA,EAAAzH,CAAAoI,EAAA,GAETmE,EAFSlE,EAAA,GAEWmE,EAFXnE,EAAA,GAAAoE,EAGoBlF,oBAAS,GAH7BmF,EAAA1M,OAAAyH,EAAA,EAAAzH,CAAAyM,EAAA,GAGTnE,EAHSoE,EAAA,GAGGnE,EAHHmE,EAAA,GAKVC,EAAclE,sBAEdmE,EAAuB,CACzB3K,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACPlE,GAAG,WACHmE,KAAK,WACLC,MAAM,gBACNC,KAAK,OACLC,SAAUyD,EACVxH,WAAS,KAIX0H,EACF5K,EAAAC,EAAAC,cAACiH,EAAD,CACIxF,KAAM2I,EACNjI,OAAQsI,EACRvI,YAAa,kBAAMmI,GAAsB,IACzC7K,MAAM,eACN4C,KAAK,+GACLC,cAAe,WACX+D,GAAc,GAEd,IAAMkB,EAAWkD,EAAYrD,QAAQ1D,MAErB,MAAZ6D,GAAiC,KAAbA,GAExBD,MAAM,gBAAiB,CACnBG,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAErI,MAAO8H,MAE7BQ,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACFkC,EAAa,GAAA9L,OAAAR,OAAAqK,EAAA,EAAArK,CAAKqM,GAAL,CAAiBjC,EAASX,YACvC+C,GAAsB,GACtBjE,GAAc,KAEjB+B,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAkB1C,OAbAG,oBAAU,WACNnC,GAAc,GACdiB,MAAM,gBAAiB,CACnBG,OAAQ,QAEPM,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACFkC,EAAclC,EAASX,UACvBlB,GAAc,KAEjB+B,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC/B,IAGCtI,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,SAAP,KACI7D,EAAAC,EAAAC,cAACwI,EAAD,CAAe/G,KAAM0E,IACpBuE,EACD5K,EAAAC,EAAAC,cAAA,OAAKyC,GAAG,QAAQS,MAAO,CAAEW,UAAW,KAChC/D,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACIjK,MAAM,UACNG,aAAW,eACXqC,MAAO,CACHzC,SAAU,QACVmK,OAAQ,GACRC,MAAO,GACPC,OAAQ,KAEZ/J,QAAS,kBAAMsJ,GAAsB,KAErCvK,EAAAC,EAAAC,cAACiB,EAAA,EAAD,aAEJnB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,SACRO,MAAM,gBACN/C,QAAQ,QACRuF,MAAO,CAAEW,UAAW,GAAIkH,aAAc,KAJ1C,cAQCb,GAAoC,IAAtBA,EAAWF,QACtBlK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAY8B,WAAS,EAACtB,MAAM,WAA5B,2BAIJZ,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMzL,WAAS,EAACf,QAAS,GACpB0L,GACGA,EAAWtH,IAAI,SAAC0E,EAAUqC,GAAX,OACX7J,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMnI,MAAI,EAACoI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1BrL,EAAAC,EAAAC,cAAA,OACIC,UAAU,oBACViD,MAAO,CAAE4G,eAAgB,GAAKH,EAAI,OAElC7J,EAAAC,EAAAC,cAACoL,GAAD,CAAc9D,SAAUA,YCtG7C+D,GAVG,WACd,OACIvL,EAAAC,EAAAC,cAAA,OAAKyC,GAAG,aACJ3C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAY8B,WAAS,EAACtB,MAAM,WAA5B,oCCSNjD,GAAQ6N,YAAe,CACzBjH,QAAS,CACLyC,KAAM,OACNtD,QAAS,CAAE+H,KAAMC,IAAK,MACtB9H,UAAW,CAAE6H,KAAME,IAAI,SAsEhBC,GAlEH,WACR,IAAMC,EAAW,CACb,CACIvJ,KAAM,YACNwJ,KAAM,YACNnM,KACI,wHACJoM,cAAe/L,EAAAC,EAAAC,cAAC8L,GAAD,OAEnB,CACI1J,KAAM,QACNwJ,KAAM,aACNnM,KACI,+GACJoM,cAAe/L,EAAAC,EAAAC,cAAC+L,GAAD,QAdTlG,EAkB8BT,mBAAS,GAlBvCU,EAAAjI,OAAAyH,EAAA,EAAAzH,CAAAgI,EAAA,GAkBPmG,EAlBOlG,EAAA,GAkBSmG,EAlBTnG,EAAA,GAAAZ,EAoBkCC,IAAMC,UAAS,GApBjDC,EAAAxH,OAAAyH,EAAA,EAAAzH,CAAAqH,EAAA,GAoBPgH,EApBO7G,EAAA,GAoBW8G,EApBX9G,EAAA,GAsBR+G,EAAkB,SAAAC,GAAK,OAAI,WAC7BJ,EAAkBI,GAClBC,GAAmB,KAGjBA,EAAqB,SAAAC,GAAK,OAEtBJ,EADNI,GAC2BL,EACDK,IAExBC,EACF1M,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACKiC,EAAS/I,IAAI,SAACC,EAAMwJ,GAAP,OACVvM,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CACIoJ,QAAM,EACNC,IAAK7J,EAAKT,KAAOiK,EACjBtL,QAASqL,EAAgBC,GACzBM,SAAUN,IAAUL,GAEpBlM,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,KACI9M,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KAAO4B,EAAK+I,OAEhB9L,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAcC,QAASX,EAAKT,WAM5C,OACItC,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAepP,MAAOA,IAClBqC,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAAC8M,EAAD,CACItN,MAAOmM,EAASK,GAAgB5J,KAChC3C,KAAMkM,EAASK,GAAgBvM,KAC/BE,WAAY6M,EACZxL,cAAesL,EACf5K,YAAawK,GAEZP,EAASK,GAAgBH,+BCxEtBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOvN,EAAAC,EAAAC,cAACsN,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7F,KAAK,SAAA8F,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b55584f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport logo from \"../yarn-ball.svg\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: `calc(100% - ${drawerWidth}px)`\r\n        }\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    toolbar: {\r\n        ...theme.mixins.toolbar,\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    brand: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        height: \"100%\"\r\n    },\r\n    logo: {\r\n        height: \"1.5rem\",\r\n        marginLeft: \"16px\",\r\n        marginRight: \"16px\"\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { container, title, desc, children, drawerMenu } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n                <Typography variant=\"h6\" className={classes.brand}>\r\n                    <img src={logo} alt=\"\" className={classes.logo} />\r\n                    KaamSutra\r\n                </Typography>\r\n            </div>\r\n            <Divider />\r\n            {drawerMenu}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"Open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={props.drawerToggler}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <Icon>menu</Icon>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"Mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                        open={props.drawerState}\r\n                        onClose={props.drawerToggler}\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Typography paragraph>{desc}</Typography>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nfunction FormDialog(props) {\r\n    const { open, handleClose, fields, title, text, primaryAction } = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{text}</DialogContentText>\r\n                {fields.map(item => item)}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={primaryAction} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default FormDialog;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nfunction FormDialog(props) {\r\n    const { open } = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Loading</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\"\r\n                    }}\r\n                >\r\n                    <CircularProgress style={{ marginRight: 16 }} />\r\n                    Please wait...\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default FormDialog;\r\n","import React from \"react\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst WorkItem = props => {\r\n    return (\r\n        <ListItem alignItems=\"flex-start\" className=\"WorkItem\">\r\n            <ListItemAvatar>\r\n                <Icon color=\"primary\">done_all</Icon>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={props.value}\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <span>{props.description}</span>\r\n                        <span style={{ display: \"block\", marginTop: 8 }}>\r\n                            {new Date(props.date).toLocaleString()}\r\n                        </span>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <Icon>delete</Icon>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default WorkItem;\r\n","import React, { useState, useEffect, createRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport FormDialog from \"../components/FormDialog\";\r\nimport LoadingDialog from \"../components/LoadingDialog\";\r\nimport WorkItem from \"./WorkItem\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        // maxWidth: 345\r\n    },\r\n    cardHeader: {\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${\r\n            theme.palette.secondary.dark\r\n        })`\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    }\r\n}));\r\n\r\nfunction RecipeReviewCard(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [works, setWorks] = React.useState(null);\r\n    const [workDialogOpen, setWorkDialogOpen] = useState(false);\r\n    const [showLoader, setShowLoader] = useState(false);\r\n\r\n    const workRef = createRef();\r\n    const workDescRef = createRef();\r\n\r\n    const workDialogFields = [\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"work\"\r\n            name=\"work\"\r\n            label=\"Work Name\"\r\n            type=\"text\"\r\n            inputRef={workRef}\r\n            fullWidth\r\n        />,\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"work_desc\"\r\n            name=\"work_desc\"\r\n            label=\"Work Description\"\r\n            type=\"text\"\r\n            inputRef={workDescRef}\r\n            fullWidth\r\n        />\r\n    ];\r\n\r\n    const workDialog = (\r\n        <FormDialog\r\n            open={workDialogOpen}\r\n            fields={workDialogFields}\r\n            handleClose={() => setWorkDialogOpen(false)}\r\n            title=\"Add Work\"\r\n            text=\"To create a new Work, please enter an unique Work name. This will let you organise your Work better.\"\r\n            primaryAction={() => {\r\n                setShowLoader(true);\r\n\r\n                const work = workRef.current.value;\r\n                const workDesc = workDescRef.current.value;\r\n\r\n                if (work == null || work === \"\") return;\r\n                if (workDesc == null || workDesc === \"\") return;\r\n\r\n                fetch(`/api/work/${props.category._id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        title: work,\r\n                        description: workDesc\r\n                    })\r\n                })\r\n                    .then(data => data.json())\r\n                    .then(jsonData => {\r\n                        setWorks([jsonData.work, ...works]);\r\n                        setWorkDialogOpen(false);\r\n                        setShowLoader(false);\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }}\r\n        />\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/work/${props.category._id}`, {\r\n            method: \"GET\"\r\n        })\r\n            .then(data => data.json())\r\n            .then(jsonData => {\r\n                setWorks(jsonData.works);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [props.category._id]);\r\n\r\n    function handleExpandClick() {\r\n        setExpanded(!expanded);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoadingDialog open={showLoader} />\r\n            {workDialog}\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton aria-label=\"Settings\">\r\n                            <Icon>more_vert</Icon>\r\n                        </IconButton>\r\n                    }\r\n                    title={props.category.title}\r\n                    titleTypographyProps={{ variant: \"h6\" }}\r\n                    subheader={new Date(\r\n                        props.category.createdAt\r\n                    ).toLocaleString()}\r\n                    className={classes.cardHeader}\r\n                />\r\n                {/* <CardContent>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                    >\r\n                        {\"\"}\r\n                    </Typography>\r\n                </CardContent> */}\r\n                <CardActions disableSpacing>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        onClick={() => setWorkDialogOpen(true)}\r\n                        disabled={!works}\r\n                    >\r\n                        <Icon style={{ marginRight: 8 }}>add</Icon>\r\n                        ADD WORK\r\n                    </Button>\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"Show more\"\r\n                    >\r\n                        <Icon>expand_more</Icon>\r\n                    </IconButton>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        <Typography variant=\"button\" color=\"textSecondary\">\r\n                            Completed Tasks\r\n                        </Typography>\r\n                        {!works && (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-start\",\r\n                                    alignItems: \"center\",\r\n                                    marginTop: 16\r\n                                }}\r\n                            >\r\n                                <CircularProgress\r\n                                    style={{ marginRight: 16 }}\r\n                                    size={30}\r\n                                />\r\n                                Please wait...\r\n                            </div>\r\n                        )}\r\n                        {works && (\r\n                            <List>\r\n                                {works.map((item, i) => {\r\n                                    let Item = (\r\n                                        <React.Fragment>\r\n                                            <Divider\r\n                                                variant=\"inset\"\r\n                                                component=\"li\"\r\n                                            />\r\n                                            <div\r\n                                                className=\"animated fadeInRight faster\"\r\n                                                style={{\r\n                                                    animationDelay:\r\n                                                        90 * i + \"ms\"\r\n                                                }}\r\n                                            >\r\n                                                <WorkItem\r\n                                                    value={item.title}\r\n                                                    date={item.createdAt}\r\n                                                    description={\r\n                                                        item.description\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    );\r\n\r\n                                    if (i === 0)\r\n                                        Item = (\r\n                                            <div\r\n                                                className=\"animated fadeInRight faster\"\r\n                                                style={{\r\n                                                    animationDelay:\r\n                                                        90 * i + \"ms\"\r\n                                                }}\r\n                                            >\r\n                                                <WorkItem\r\n                                                    value={item.title}\r\n                                                    date={item.createdAt}\r\n                                                    description={\r\n                                                        item.description\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                        );\r\n\r\n                                    return Item;\r\n                                })}\r\n                            </List>\r\n                        )}\r\n                        {works && works.length === 0 && (\r\n                            <Typography variant=\"body2\" color=\"primary\">\r\n                                Sorry, no work yet.\r\n                            </Typography>\r\n                        )}\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default RecipeReviewCard;\r\n","import React, { useState, createRef, useEffect } from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CategoryCard from \"../components/CategoryCard\";\r\nimport LoadingDialog from \"../components/LoadingDialog\";\r\nimport FormDialog from \"../components/FormDialog\";\r\n\r\nconst Works = () => {\r\n    const [categories, setCategories] = useState(null);\r\n    const [categoryDialogOpen, setcategoryDialogOpen] = useState(false);\r\n    const [showLoader, setShowLoader] = useState(false);\r\n\r\n    const categoryRef = createRef();\r\n\r\n    const categoryDialogFields = [\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"category\"\r\n            name=\"category\"\r\n            label=\"Category Name\"\r\n            type=\"text\"\r\n            inputRef={categoryRef}\r\n            fullWidth\r\n        />\r\n    ];\r\n\r\n    const CategoryDialog = (\r\n        <FormDialog\r\n            open={categoryDialogOpen}\r\n            fields={categoryDialogFields}\r\n            handleClose={() => setcategoryDialogOpen(false)}\r\n            title=\"Add Category\"\r\n            text=\"To create a new Category, please enter an unique category name. This will let you organise your work better.\"\r\n            primaryAction={() => {\r\n                setShowLoader(true);\r\n\r\n                const category = categoryRef.current.value;\r\n\r\n                if (category == null || category === \"\") return;\r\n\r\n                fetch(\"/api/category\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({ title: category })\r\n                })\r\n                    .then(data => data.json())\r\n                    .then(jsonData => {\r\n                        setCategories([...categories, jsonData.category]);\r\n                        setcategoryDialogOpen(false);\r\n                        setShowLoader(false);\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }}\r\n        />\r\n    );\r\n\r\n    useEffect(() => {\r\n        setShowLoader(true);\r\n        fetch(\"/api/category\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(data => data.json())\r\n            .then(jsonData => {\r\n                setCategories(jsonData.category);\r\n                setShowLoader(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoadingDialog open={showLoader} />\r\n            {CategoryDialog}\r\n            <div id=\"Works\" style={{ marginTop: 32 }}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    aria-label=\"Add Category\"\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        bottom: 16,\r\n                        right: 16,\r\n                        zIndex: 999\r\n                    }}\r\n                    onClick={() => setcategoryDialogOpen(true)}\r\n                >\r\n                    <Icon>add</Icon>\r\n                </Fab>\r\n                <Typography\r\n                    variant=\"button\"\r\n                    color=\"textSecondary\"\r\n                    display=\"block\"\r\n                    style={{ marginTop: 16, marginBottom: 16 }}\r\n                >\r\n                    Categories\r\n                </Typography>\r\n                {categories && categories.length === 0 && (\r\n                    <Typography paragraph color=\"primary\">\r\n                        There are no works yet.\r\n                    </Typography>\r\n                )}\r\n                <Grid container spacing={3}>\r\n                    {categories &&\r\n                        categories.map((category, i) => (\r\n                            <Grid item xs={12} sm={6} md={4}>\r\n                                <div\r\n                                    className=\"animated fadeInUp\"\r\n                                    style={{ animationDelay: 60 * i + \"ms\" }}\r\n                                >\r\n                                    <CategoryCard category={category} />\r\n                                </div>\r\n                            </Grid>\r\n                        ))}\r\n                </Grid>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Works;\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div id=\"Dashboard\">\r\n            <Typography paragraph color=\"primary\">\r\n                Dashboard page is yet to come.\r\n            </Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport teal from \"@material-ui/core/colors/teal\";\n\nimport ResponsiveDrawerLayout from \"./layout/ResponsiveDrawer\";\nimport WorksPage from \"./pages/Works\";\nimport DashboardPage from \"./pages/Dashboard\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: { main: cyan[500] },\n        secondary: { main: teal[\"A400\"] } // This is just green.A700 as hex.\n    }\n});\n\nconst App = () => {\n    const navItems = [\n        {\n            text: \"Dashboard\",\n            icon: \"dashboard\",\n            desc:\n                \"Dashboard contains all the parameters you develope during your work. This is a great place to overview your progress.\",\n            pageComponent: <DashboardPage />\n        },\n        {\n            text: \"Works\",\n            icon: \"assignment\",\n            desc:\n                \"Works section contains details about all the work you have added. This is the perfect place to be organised.\",\n            pageComponent: <WorksPage />\n        }\n    ];\n\n    const [selectedItemId, setSelectedItemId] = useState(1);\n\n    const [mobileDrawerOpen, setMobileDrawerOpen] = React.useState(false);\n\n    const navItemListener = index => () => {\n        setSelectedItemId(index);\n        toggleMobileDrawer(false);\n    };\n\n    const toggleMobileDrawer = state =>\n        state\n            ? setMobileDrawerOpen(!mobileDrawerOpen)\n            : setMobileDrawerOpen(state);\n\n    const DrawerMenu = (\n        <List>\n            {navItems.map((item, index) => (\n                <ListItem\n                    button\n                    key={item.text + index}\n                    onClick={navItemListener(index)}\n                    selected={index === selectedItemId}\n                >\n                    <ListItemIcon>\n                        <Icon>{item.icon}</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={item.text} />\n                </ListItem>\n            ))}\n        </List>\n    );\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <ResponsiveDrawerLayout\n                title={navItems[selectedItemId].text}\n                desc={navItems[selectedItemId].desc}\n                drawerMenu={DrawerMenu}\n                drawerToggler={toggleMobileDrawer}\n                drawerState={mobileDrawerOpen}\n            >\n                {navItems[selectedItemId].pageComponent}\n            </ResponsiveDrawerLayout>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./animate.css\";\nimport \"./main.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/yarn-ball.4b24fe3b.svg\";"],"sourceRoot":""}